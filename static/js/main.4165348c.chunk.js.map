{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","noSort","sortType","setSortType","isReversed","setIsReversed","goods","sortedGoods","sortByLength","sortByName","sort","good1","good2","length","localeCompare","Error","reverse","sortGoods","isResetButton","handleSortClick","sortTypeValue","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,UAAAA,E,oBAAAA,E,mBAAAA,M,KAWL,IA6BaE,EAAM,WACjB,MAAgCC,mBAASH,EAASI,QAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAjCU,SAChBA,EADgB,GAEZ,IADeJ,EAChB,EADgBA,SAAUE,EAC1B,EAD0BA,WAE7B,GAAIF,IAAaL,EAASI,SAAWG,EACnC,OAAOE,EAGT,IAAMC,EAAW,YAAOD,GAmBxB,OAjBIJ,IAAaL,EAASW,cAAgBN,IAAaL,EAASY,YAC9DF,EAAYG,MAAK,SAACC,EAAOC,GACvB,OAAQV,GACN,KAAKL,EAASW,aACZ,OAAOG,EAAME,OAASD,EAAMC,OAC9B,KAAKhB,EAASY,WACZ,OAAOE,EAAMG,cAAcF,GAC7B,QACE,MAAM,IAAIG,MAAM,4CAKpBX,GACFG,EAAYS,UAGPT,EAOOU,CAAUnB,EAAiB,CAAEI,WAAUE,eAE/Cc,EAAgBhB,GAAYE,EAO5Be,EAAkB,SAACC,GACvBjB,EAAYiB,IAOd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAY1B,EAASY,aAAeP,IAEtCsB,QAAS,kBAAML,EAAgBtB,EAASY,aAL1C,iCAUA,wBACEa,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAY1B,EAASW,eAAiBN,IAExCsB,QAAS,kBAAML,EAAgBtB,EAASW,eAL1C,4BAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAanB,IAEfoB,QAhCmB,WACzBnB,GAAeD,IA0BX,qBAUCc,GACC,wBACEI,KAAK,SACLD,UAAU,4BACVG,QAlDe,WACvBrB,EAAYN,EAASI,QACrBI,GAAc,IA6CR,sBAUJ,6BACGC,EAAMmB,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4165348c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  noSort = '',\n  sortByLength = 'leng',\n  sortByName = 'name',\n}\n\ninterface StateInterface {\n  sortType: SortType;\n  isReversed: boolean;\n}\n\nconst sortGoods = (\n  goods: string[], { sortType, isReversed }: StateInterface,\n) => {\n  if (sortType === SortType.noSort && !isReversed) {\n    return goods;\n  }\n\n  const sortedGoods = [...goods];\n\n  if (sortType === SortType.sortByLength || sortType === SortType.sortByName) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.sortByLength:\n          return good1.length - good2.length;\n        case SortType.sortByName:\n          return good1.localeCompare(good2);\n        default:\n          throw new Error('The parameter of sort does not exist');\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.noSort);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = sortGoods(goodsFromServer, { sortType, isReversed });\n\n  const isResetButton = sortType || isReversed;\n\n  const handleResetClick = () => {\n    setSortType(SortType.noSort);\n    setIsReversed(false);\n  };\n\n  const handleSortClick = (sortTypeValue: SortType) => {\n    setSortType(sortTypeValue);\n  };\n\n  const handleReverseClick = () => {\n    setIsReversed(!isReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': SortType.sortByName !== sortType,\n          })}\n          onClick={() => handleSortClick(SortType.sortByName)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': SortType.sortByLength !== sortType,\n          })}\n          onClick={() => handleSortClick(SortType.sortByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {isResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}